

extends layout


block content

  #dragandrophandler Drop KMZ file here...
  br
  br
  //- #status1


  //- #zone
  //-   p.legend Drop KMZ file here...
  //-     p
  //-       input#upload_option(type='checkbox')
  //-       label(for='upload_option') Option for later expansion
  //-     p.progress
  //-       span#bar_zone
  //-     ul.filelist

  script.


    //- var zone = new FileDrop('zone')

    //- zone.event('send', function (files) {
    //-   console.log("upload started");
    //-   fd.byID('bar_zone').style.width = 0;

    //-   var index;
    //-   for (index = 0; index < files.length; ++index) {
    //-     $(".filelist").append("<li>"+files[index].name+"  ("+files[index].size+")</li>");
    //-     console.log(files[index]);

    //-     //- alert('Dropped files: ' + files.length + '\n' +
    //-     //- 'First file: ' + files.first().name + '\n' +
    //-     //- 'File recently changed: ' + files.newest().name + '\n' +
    //-     //- 'Biggest file: ' + files.largest().name + '\n' +
    //-     //- 'Number of images: ' + files.images().length + '\n' +
    //-     //- 'Files starting with "A": ' + files.named(/^a/i).length)
    //-   }


    //-   files.each(function (file) {
    //-     // Reset the progress when a new upload starts:
    //-     file.event('done', function (xhr) {
    //-       alert(xhr.responseText)
    //-     });


    //-     file.event('sendXHR', function () {
    //-       console.log("sendXHR:");
    //-     })


    //-     // Update progress when browser reports it:
    //-     file.event('progress', function (current, total) {
    //-       var width = current / total * 100 + '%'
    //-       fd.byID('bar_zone').style.width = width
    //-       console.log("PROGRESS:", width);
    //-     });

    //-     var value = fd.byID('upload_option').checked ? '1' : '0'
    //-     file.sendTo('/upload/?upload_option=' + value)
    //-   })
    //- })

    //- zone.event('send', function (files) {
    //-   files.each(function (file) {
    //-     file.event('done', function (xhr) {
    //-       alert(xhr.responseText)
    //-     })

    //-     // byID() gets checkbox node by its ID:
    //-     var value = fd.byID('upload_option').checked ? '1' : '0'
    //-     // Change the receiving URL:
    //-     file.sendTo('/upload/?upload_option=' + value)
    //-   })
    //- })


    //- adapted from here just because the progress bar worked better than above
    //- http://hayageek.com/drag-and-drop-file-upload-jquery/

    function sendFileToServer(formData,status) {
        var uploadURL ="/upload"; //Upload URL
        var extraData ={}; //Extra Data.
        var jqXHR=$.ajax({
                xhr: function() {
                var xhrobj = $.ajaxSettings.xhr();
                if (xhrobj.upload) {
                        xhrobj.upload.addEventListener('progress', function(event) {
                            var percent = 0;
                            var position = event.loaded || event.position;
                            var total = event.total;
                            if (event.lengthComputable) {
                                percent = Math.ceil(position / total * 100);
                            }
                            //Set progress
                            status.setProgress(percent);
                        }, false);
                    }
                return xhrobj;
            },
        url: uploadURL,
        type: "POST",
        contentType:false,
        processData: false,
            cache: false,
            data: formData,
            success: function(response){
              status.setProgress(100);
              status.setDownload(response.link);
              //console.log(status);
              //alert(response.message);


              //$("#status1").append("File upload Done<br>");         
            }
        }); 
     
        status.setAbort(jqXHR);
    }
     
    var rowCount=0;
    function createStatusbar(obj) {
         rowCount++;
         var row="odd";
         if(rowCount %2 ==0) row ="even";
         this.statusbar = $("<div class='statusbar "+row+"'></div>");
         this.filename = $("<div class='filename'></div>").appendTo(this.statusbar);
         this.size = $("<div class='filesize'></div>").appendTo(this.statusbar);
         this.progressBar = $("<div class='progressBar'><div></div></div>").appendTo(this.statusbar);
         this.download = $("<div class='download'><div><img height='20' src='/img/spinner.gif'></div></div>").appendTo(this.statusbar);
         this.abort = $("<div class='abort'>Abort</div>").appendTo(this.statusbar);
         obj.after(this.statusbar);
     
        this.setFileNameSize = function(name,size) {
            var sizeStr="";
            var sizeKB = size/1024;
            if(parseInt(sizeKB) > 1024) {
                var sizeMB = sizeKB/1024;
                sizeStr = sizeMB.toFixed(2)+" MB";
            } else {
                sizeStr = sizeKB.toFixed(2)+" KB";
            }
     
            this.filename.html(name);
            this.size.html(sizeStr);
        }
        this.setProgress = function(progress) {       
            var progressBarWidth =progress*this.progressBar.width()/ 100;  
            this.progressBar.find('div').animate({ width: progressBarWidth }, 10).html(progress + "% ");
            if(parseInt(progress) >= 100) {
                this.abort.hide();
            }
        }
        this.setDownload = function(downloadlink) {
          console.log(this);
          this.download.find('div').html('<a href="'+downloadlink+'">Download</a>');
        }
        this.setAbort = function(jqxhr) {
            var sb = this.statusbar;
            this.abort.click(function() {
                jqxhr.abort();
                sb.hide();
            });
        }
    }
    function handleFileUpload(files,obj) {
       for (var i = 0; i < files.length; i++) 
       {
            var fd = new FormData();
            fd.append('file', files[i]);
     
            var status = new createStatusbar(obj); //Using this we can set progress.
            status.setFileNameSize(files[i].name,files[i].size);
            sendFileToServer(fd,status);
     
       }
    }
    $(document).ready(function() {
      var obj = $("#dragandrophandler");
      obj.on('dragenter', function (e) {
          e.stopPropagation();
          e.preventDefault();
          $(this).css('border', '2px solid #0B85A1');
      });
      obj.on('dragover', function (e) {
           e.stopPropagation();
           e.preventDefault();
      });
      obj.on('drop', function (e) {
       
           $(this).css('border', '2px dotted #0B85A1');
           e.preventDefault();
           var files = e.originalEvent.dataTransfer.files;
       
           //We need to send dropped files to Server
           handleFileUpload(files,obj);
      });
      $(document).on('dragenter', function (e) {
          e.stopPropagation();
          e.preventDefault();
      });
      $(document).on('dragover', function (e) {
        e.stopPropagation();
        e.preventDefault();
        obj.css('border', '2px dotted #0B85A1');
      });
      $(document).on('drop', function (e) {
          e.stopPropagation();
          e.preventDefault();
      });
     
    });